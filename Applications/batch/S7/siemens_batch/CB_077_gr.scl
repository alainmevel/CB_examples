FUNCTION FC77: VOID
AUTHOR : CB
VAR_INPUT
        combE : INT;
END_VAR

LABEL
        combi_e, actions, combi_s;
END_LABEL

BEGIN
        IF (combE = 0) THEN GOTO actions;
        END_IF;
(* Gestion des combinatoires d'entree *)
combi_e: ;
RETURN;

(* Gestion des actions du graphe *)
actions: 
(* Step activity of Step10 *)

(* Step activity of Step11 *)
IF DB77.Step11.S1 THEN
"DB120".MGT1_flourWeighingRq := TRUE;
END_IF;
IF DB77.Step11.X THEN
"DB120".MGT1_flourWeighingRq := TRUE;
END_IF;
IF DB77.Step11.S0 THEN
"DB120".MGT1_flourWeighingRq := FALSE;
END_IF;

(* Step activity of Step12 *)
IF DB77.Step12.S1 THEN
"DB120".MGT1_kneadingRq := TRUE;
"DB120".MGT1_syrupWeighingRq := TRUE;
END_IF;
IF DB77.Step12.X THEN
"DB120".MGT1_kneadingRq := TRUE;

"DB120".MGT1_syrupWeighingRq := TRUE;
END_IF;
IF DB77.Step12.S0 THEN
"DB120".MGT1_kneadingRq := FALSE;
"DB120".MGT1_syrupWeighingRq := FALSE;
END_IF;

(* Step activity of Step13 *)

(* Step activity of Step14 *)
IF DB77.Step14.X THEN
IF "DB120".WKM1_endCycleRequest THEN
	"DB120".MGT1_cycleEnd := TRUE;
END_IF;
END_IF;
IF DB77.Step14.S0 THEN
"DB120".MGT1_cycleEnd := FALSE;
END_IF;

(* Gestion des combinatoires de sortie *)
combi_s: ;

(* Memory edges *)
END_FUNCTION

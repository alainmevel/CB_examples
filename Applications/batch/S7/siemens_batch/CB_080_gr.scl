FUNCTION FC80: VOID
AUTHOR : CB
VAR_INPUT
        combE : INT;
END_VAR

LABEL
        combi_e, actions, combi_s;
END_LABEL

BEGIN
        IF (combE = 0) THEN GOTO actions;
        END_IF;
(* Gestion des combinatoires d'entree *)
combi_e: 
"DB120".SyrMGT1_endOfWeighingS1 := (("DB120".SyrMGT1_totalWeight + "DB120".SyrMGT1_weighingWeight) >= "DB120".SyrMGT1_syrup1Weight) OR 
("DB120".SyrMGT1_weighingWeight >= "DB120".SyrMGT1_maxWeight);

"DB120".SyrMGT1_endOfWeighingS2 := (("DB120".SyrMGT1_totalWeight + "DB120".SyrMGT1_weighingWeight) >= "DB120".SyrMGT1_syrup2Weight) OR 
("DB120".SyrMGT1_weighingWeight >= "DB120".SyrMGT1_maxWeight);

"DB120".SyrMGT1_endOfWeighingS3 := (("DB120".SyrMGT1_totalWeight + "DB120".SyrMGT1_weighingWeight) >= "DB120".SyrMGT1_syrup3Weight) OR 
("DB120".SyrMGT1_weighingWeight >= "DB120".SyrMGT1_maxWeight);
RETURN;

(* Gestion des actions du graphe *)
actions: 
(* Step activity of Step10 *)

(* Step activity of Step11 *)
IF DB80.Step11.S1 THEN
"DB120".SyrMGT1_introduceS1 := TRUE;
END_IF;
IF DB80.Step11.X THEN
"DB120".SyrMGT1_introduceS1 := TRUE;
END_IF;
IF DB80.Step11.S0 THEN
"DB120".SyrMGT1_introduceS1 := FALSE;
END_IF;

(* Step activity of Step12 *)
IF DB80.Step12.X THEN
IF (DB80.Step12.S1) THEN
	"DB120".SyrMGT1_totalWeight := "DB120".SyrMGT1_totalWeight + "DB120".SyrMGT1_weighingWeight;
END_IF;
END_IF;

(* Step activity of Step13 *)
IF DB80.Step13.S1 THEN
"DB120".SyrMGT1_exitSyrup := TRUE;
END_IF;
IF DB80.Step13.X THEN
"DB120".SyrMGT1_exitSyrup := TRUE;
END_IF;
IF DB80.Step13.S0 THEN
"DB120".SyrMGT1_exitSyrup := FALSE;
END_IF;

(* Step activity of Step14 *)

(* Step activity of Step15 *)
IF DB80.Step15.S1 THEN
"DB120".SyrMGT1_weighingS1Ok := TRUE;
END_IF;
IF DB80.Step15.X THEN
"DB120".SyrMGT1_weighingS1Ok := TRUE;

"DB120".SyrMGT1_totalWeight := 0;
END_IF;
IF DB80.Step15.S0 THEN
"DB120".SyrMGT1_weighingS1Ok := FALSE;
END_IF;

(* Step activity of Step20 *)

(* Step activity of Step21 *)
IF DB80.Step21.X THEN
IF ("DB120".SyrMGT1_syrup1Weight > 0) THEN
	"DB120".SyrMGT1_weighingS1 := TRUE;
END_IF;
END_IF;
IF DB80.Step21.S0 THEN
"DB120".SyrMGT1_weighingS1 := FALSE;
END_IF;

(* Step activity of Step22 *)
IF DB80.Step22.X THEN
IF ("DB120".SyrMGT1_syrup2Weight > 0) THEN
	"DB120".SyrMGT1_weighingS2 := TRUE;
END_IF;
END_IF;
IF DB80.Step22.S0 THEN
"DB120".SyrMGT1_weighingS2 := FALSE;
END_IF;

(* Step activity of Step23 *)
IF DB80.Step23.X THEN
IF ("DB120".SyrMGT1_syrup3Weight > 0) THEN
	"DB120".SyrMGT1_weighingS3 := TRUE;
END_IF;
END_IF;
IF DB80.Step23.S0 THEN
"DB120".SyrMGT1_weighingS3 := FALSE;
END_IF;

(* Step activity of Step24 *)
IF DB80.Step24.S1 THEN
"DB120".SyrMGT1_weighingOk := TRUE;
END_IF;
IF DB80.Step24.X THEN
"DB120".SyrMGT1_weighingOk := TRUE;
END_IF;
IF DB80.Step24.S0 THEN
"DB120".SyrMGT1_weighingOk := FALSE;
END_IF;

(* Step activity of Step30 *)

(* Step activity of Step31 *)
IF DB80.Step31.S1 THEN
"DB120".SyrMGT1_introduceS2 := TRUE;
END_IF;
IF DB80.Step31.X THEN
"DB120".SyrMGT1_introduceS2 := TRUE;
END_IF;
IF DB80.Step31.S0 THEN
"DB120".SyrMGT1_introduceS2 := FALSE;
END_IF;

(* Step activity of Step32 *)
IF DB80.Step32.X THEN
IF (DB80.Step32.S1) THEN
	"DB120".SyrMGT1_totalWeight := "DB120".SyrMGT1_totalWeight + "DB120".SyrMGT1_weighingWeight;
END_IF;
END_IF;

(* Step activity of Step33 *)
IF DB80.Step33.S1 THEN
"DB120".SyrMGT1_exitSyrup := TRUE;
END_IF;
IF DB80.Step33.X THEN
"DB120".SyrMGT1_exitSyrup := TRUE;
END_IF;
IF DB80.Step33.S0 THEN
"DB120".SyrMGT1_exitSyrup := FALSE;
END_IF;

(* Step activity of Step34 *)

(* Step activity of Step35 *)
IF DB80.Step35.S1 THEN
"DB120".SyrMGT1_weighingS2Ok := TRUE;
END_IF;
IF DB80.Step35.X THEN
"DB120".SyrMGT1_weighingS2Ok := TRUE;

"DB120".SyrMGT1_totalWeight := 0;
END_IF;
IF DB80.Step35.S0 THEN
"DB120".SyrMGT1_weighingS2Ok := FALSE;
END_IF;

(* Step activity of Step40 *)

(* Step activity of Step41 *)
IF DB80.Step41.S1 THEN
"DB120".SyrMGT1_introduceS3 := TRUE;
END_IF;
IF DB80.Step41.X THEN
"DB120".SyrMGT1_introduceS3 := TRUE;
END_IF;
IF DB80.Step41.S0 THEN
"DB120".SyrMGT1_introduceS3 := FALSE;
END_IF;

(* Step activity of Step42 *)
IF DB80.Step42.X THEN
IF (DB80.Step42.S1) THEN
	"DB120".SyrMGT1_totalWeight := "DB120".SyrMGT1_totalWeight + "DB120".SyrMGT1_weighingWeight;
END_IF;
END_IF;

(* Step activity of Step43 *)
IF DB80.Step43.S1 THEN
"DB120".SyrMGT1_exitSyrup := TRUE;
END_IF;
IF DB80.Step43.X THEN
"DB120".SyrMGT1_exitSyrup := TRUE;
END_IF;
IF DB80.Step43.S0 THEN
"DB120".SyrMGT1_exitSyrup := FALSE;
END_IF;

(* Step activity of Step44 *)

(* Step activity of Step45 *)
IF DB80.Step45.S1 THEN
"DB120".SyrMGT1_weighingS3Ok := TRUE;
END_IF;
IF DB80.Step45.X THEN
"DB120".SyrMGT1_weighingS3Ok := TRUE;

"DB120".SyrMGT1_totalWeight := 0;
END_IF;
IF DB80.Step45.S0 THEN
"DB120".SyrMGT1_weighingS3Ok := FALSE;
END_IF;

(* Gestion des combinatoires de sortie *)
combi_s: 
IF NOT "DB120".WKM1_cycleInProgress THEN
	"DB120".SyrMGT1_introduceS1 := FALSE;
	
	"DB120".SyrMGT1_introduceS2 := FALSE;
	
	"DB120".SyrMGT1_introduceS3 := FALSE;
	
	"DB120".SyrMGT1_exitSyrup := FALSE;
END_IF;

"DB120".SyrMGT1_introS1End := NOT "DB120".WKM1_cycleInProgress OR NOT "DB120".SyrMGT1_introduceS1;

"DB120".SyrMGT1_introS2End := NOT "DB120".WKM1_cycleInProgress OR NOT "DB120".SyrMGT1_introduceS2;

"DB120".SyrMGT1_introS3End := NOT "DB120".WKM1_cycleInProgress OR NOT "DB120".SyrMGT1_introduceS3;

"DB120".SyrMGT1_exitSyrupEnd := NOT "DB120".WKM1_cycleInProgress OR NOT "DB120".SyrMGT1_exitSyrup;

(* Memory edges *)
END_FUNCTION

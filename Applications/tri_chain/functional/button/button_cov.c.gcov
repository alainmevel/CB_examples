        -:    0:Source:button_cov.c
        -:    0:Graph:MinGW/button_cov.gcno
        -:    0:Data:MinGW/button_cov.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*2023-10-03T11:13:58-01:00*/
        -:    2:
        -:    3:/********************************************************************
        -:    4: * button_cov.c
        -:    5: * 
        -:    6: * generated by: plcgen 3.1.391
        -:    7: ********************************************************************/
        -:    8:
        -:    9:#include "cb_comp.h"
        -:   10:#include "cb_covs.h"
        -:   11:#include "iec_1131.h"
        -:   12:
        -:   13:#include "button.h"
        -:   14:
        -:   15:
        -:   16:
        -:   17:/**************************** Variables *****************************/
        -:   18:
        -:   19:CB_Index button__num = 0;
        -:   20:CB_Mem_Bool *button_output;
        -:   21:CB_Mem_Bool *button_user_PushButton;
        -:   22:CB_Mem_Bool *button_time2reach;
        -:   23:CB_Mem_Bool *button_pulse_type;
        -:   24:CB_Mem_Float *button_pulseDuration;
        -:   25:
        -:   26:/**************************** Variables *****************************/
        -:   27:
        -:   28:#define output (button_output->CB_current_value)
        -:   29:#define user_PushButton (button_user_PushButton->CB_current_value)
        -:   30:#define time2reach (button_time2reach->CB_current_value)
        -:   31:#define pulse_type (button_pulse_type->CB_current_value)
        -:   32:#define pulseDuration (button_pulseDuration->CB_current_value)
        -:   33:
        -:   34:
        -:   35:/************************ Components offsets ************************/
        -:   36:
        -:   37:
        -:   38:/********************* Initialization function **********************/
        -:   39:
        1:   40:int _tri_chain__button_init(void)
        -:   41:{
        1:   42:	(self.Float+0)->CB_current_value = 2.0; /*pulseDuration*/
        1:   43:	self.Bool+=3;
        1:   44:	self.Float+=1;
        -:   45:
        -:   46:
        1:   47:	return 0;
        -:   48:}
        -:   49:
        -:   50:
        -:   51:/************************ Behavior function *************************/
        -:   52:
        1:   53:int tri_chain__button(void)
        -:   54:{
        -:   55:	static char *__comp_name = "tri_chain.button";
        1:   56:	if (exec_term_node(self_num)) {
        -:   57:
        -:   58:		/*********************** Internals variables ************************/
        -:   59:
        1:   60:		button_user_PushButton = self.Bool+0;
        1:   61:		button_time2reach = self.Bool+1;
        1:   62:		button_pulse_type = self.Bool+2;
        1:   63:		button_pulseDuration = self.Float+0;
        -:   64:
        -:   65:		/********************* Pre-conditions execution *********************/
        -:   66:
        -:   67:		/*no Pre-conditions*/
        -:   68:
        -:   69:		/************************ Behavior execution ************************/
        -:   70:
        -:   71:		{
        -:   72:			/* ----------------------------------------------------------------	*/
        -:   73:			/* Type : Model of Operative Behaviour					*/
        -:   74:			/* Category :  Sensors							*/
        -:   75:			/* Author : Dassault Systemes						*/
        -:   76:			/* Update date : June 2018							*/
        -:   77:			/* ----------------------------------------------------------------	*/
        1:   78:			if pulse_type 
        -:   79:				{
    #####:   80:				if user_PushButton
        -:   81:					{
    #####:   82:					if(timeNow >= time2reach) user_PushButton=0;
        -:   83:					}
        -:   84:				else
        -:   85:					{
    #####:   86:					time2reach=timeNow+(pulseDuration * 1000000);
        -:   87:					}
    #####:   88:				output=user_PushButton;
        -:   89:				}
        -:   90:			else
        -:   91:				{
        1:   92:				output=user_PushButton;
        -:   93:				}
        -:   94:		}
        -:   95:
        1:   96:		CB_post_bool(button_output);
        -:   97:
        -:   98:		/******************** Post-conditions execution *********************/
        -:   99:
        -:  100:		/*no Post-conditions*/
        -:  101:	}
        -:  102:
        -:  103:	/*************************** self update ****************************/
        -:  104:
        1:  105:	self.Bool += 3;
        1:  106:	self.Float += 1;
        -:  107:
        1:  108:	return 0;
        -:  109:}
        -:  110:

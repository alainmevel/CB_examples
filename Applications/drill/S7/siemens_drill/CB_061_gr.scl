FUNCTION FC61: VOID
AUTHOR : CB
VAR_INPUT
        combE : INT;
END_VAR

LABEL
        combi_e, actions, combi_s;
END_LABEL

BEGIN
        IF (combE = 0) THEN GOTO actions;
        END_IF;
(* Gestion des combinatoires d'entree *)
combi_e: 
IF (((DB61.Step10.X OR DB61.Step12.X) AND 
("DB90".F3SpinM1_acknowledgePB AND NOT M1.5))) THEN
	"DB90".clampingFaultClaF1 := 0;
END_IF;

IF (DB61.Step11.X AND "DB90".F2RCYL1_generalFault) THEN
	"DB90".clampingFaultClaF1 := 1;
END_IF;

IF (DB61.Step11.X AND "DB90".F2LCYL1_generalFault) THEN
	"DB90".clampingFaultClaF1 := 2;
END_IF;

IF (DB61.Step13.X AND "DB90".F2RCYL1_generalFault) THEN
	"DB90".clampingFaultClaF1 := 3;
END_IF;

IF (DB61.Step13.X AND "DB90".F2LCYL1_generalFault) THEN
	"DB90".clampingFaultClaF1 := 4;
END_IF;
RETURN;

(* Gestion des actions du graphe *)
actions: 
(* Step activity of Step10 *)
IF DB61.Step10.X THEN
IF ("DB90".clampingFaultClaF1 = 0) THEN
	"DB90".releasingOKClaF1 := TRUE;
END_IF;
END_IF;
IF DB61.Step10.S0 THEN
"DB90".releasingOKClaF1 := FALSE;
END_IF;

(* Step activity of Step11 *)

(* Step activity of Step12 *)
IF DB61.Step12.S1 THEN
"DB90".clampingOKClaF1 := TRUE;
END_IF;
IF DB61.Step12.X THEN
"DB90".clampingOKClaF1 := TRUE;
END_IF;
IF DB61.Step12.S0 THEN
"DB90".clampingOKClaF1 := FALSE;
END_IF;

(* Step activity of Step13 *)

(* Step activity of Step14 *)

(* Gestion des combinatoires de sortie *)
combi_s: 
"DB90".leftLockingClaF1 := DB61.Step11.X OR DB61.Step12.X;

"DB90".rightLockingClaF1 := DB61.Step11.X OR DB61.Step12.X;

(* Memory edges *)
M1.5 := "DB90".F3SpinM1_acknowledgePB;
END_FUNCTION

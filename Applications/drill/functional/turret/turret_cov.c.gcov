        -:    0:Source:turret_cov.c
        -:    0:Graph:MinGW/turret_cov.gcno
        -:    0:Data:MinGW/turret_cov.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*2023-10-03T11:13:44-01:00*/
        -:    2:
        -:    3:/********************************************************************
        -:    4: * turret_cov.c
        -:    5: * 
        -:    6: * generated by: plcgen 3.1.391
        -:    7: ********************************************************************/
        -:    8:
        -:    9:#include "cb_comp.h"
        -:   10:#include "cb_covs.h"
        -:   11:#include "iec_1131.h"
        -:   12:
        -:   13:#include "turret.h"
        -:   14:
        -:   15:
        -:   16:
        -:   17:/**************************** Variables *****************************/
        -:   18:
        -:   19:CB_Index turret__num = 0;
        -:   20:CB_Mem_Float *turret_speed;
        -:   21:CB_Mem_Bool *turret_forward;
        -:   22:CB_Mem_Bool *turret_backward;
        -:   23:CB_Mem_Bool *turret_highSpeed;
        -:   24:CB_Mem_Bool *turret_lowSpeed;
        -:   25:CB_Mem_Float *turret_axlePosition;
        -:   26:CB_Mem_Bool *turret_forwardEnd;
        -:   27:CB_Mem_Bool *turret_forwardDeceleration;
        -:   28:CB_Mem_Bool *turret_backwardDeceleration;
        -:   29:CB_Mem_Bool *turret_backwardEnd;
        -:   30:CB_Mem_Float *turret_speedIncrement;
        -:   31:CB_Mem_Bool *turret_lockingFault;
        -:   32:CB_Mem_Bool *turret_forwardEndFault;
        -:   33:CB_Mem_Bool *turret_forwardEndValue;
        -:   34:CB_Mem_Bool *turret_forwardDecelerationFault;
        -:   35:CB_Mem_Bool *turret_forwardDecelerationValue;
        -:   36:CB_Mem_Bool *turret_backwardDecelerationFault;
        -:   37:CB_Mem_Bool *turret_backwardDecelerationValue;
        -:   38:CB_Mem_Bool *turret_backwardEndFault;
        -:   39:CB_Mem_Bool *turret_backwardEndValue;
        -:   40:CB_Mem_Float *turret_axleLength;
        -:   41:CB_Mem_Int *turret_forwardDecelerationPosition;
        -:   42:CB_Mem_Int *turret_backwardDecelerationPosition;
        -:   43:CB_Mem_Int *turret_range;
        -:   44:
        -:   45:/**************************** Variables *****************************/
        -:   46:
        -:   47:#define speed (turret_speed->CB_current_value)
        -:   48:#define forward (turret_forward->CB_current_value)
        -:   49:#define backward (turret_backward->CB_current_value)
        -:   50:#define highSpeed (turret_highSpeed->CB_current_value)
        -:   51:#define lowSpeed (turret_lowSpeed->CB_current_value)
        -:   52:#define axlePosition (turret_axlePosition->CB_current_value)
        -:   53:#define forwardEnd (turret_forwardEnd->CB_current_value)
        -:   54:#define forwardDeceleration (turret_forwardDeceleration->CB_current_value)
        -:   55:#define backwardDeceleration (turret_backwardDeceleration->CB_current_value)
        -:   56:#define backwardEnd (turret_backwardEnd->CB_current_value)
        -:   57:#define speedIncrement (turret_speedIncrement->CB_current_value)
        -:   58:#define lockingFault (turret_lockingFault->CB_current_value)
        -:   59:#define forwardEndFault (turret_forwardEndFault->CB_current_value)
        -:   60:#define forwardEndValue (turret_forwardEndValue->CB_current_value)
        -:   61:#define forwardDecelerationFault (turret_forwardDecelerationFault->CB_current_value)
        -:   62:#define forwardDecelerationValue (turret_forwardDecelerationValue->CB_current_value)
        -:   63:#define backwardDecelerationFault (turret_backwardDecelerationFault->CB_current_value)
        -:   64:#define backwardDecelerationValue (turret_backwardDecelerationValue->CB_current_value)
        -:   65:#define backwardEndFault (turret_backwardEndFault->CB_current_value)
        -:   66:#define backwardEndValue (turret_backwardEndValue->CB_current_value)
        -:   67:#define axleLength (turret_axleLength->CB_current_value)
        -:   68:#define forwardDecelerationPosition (turret_forwardDecelerationPosition->CB_current_value)
        -:   69:#define backwardDecelerationPosition (turret_backwardDecelerationPosition->CB_current_value)
        -:   70:#define range (turret_range->CB_current_value)
        -:   71:
        -:   72:
        -:   73:/************************ Components offsets ************************/
        -:   74:
        -:   75:
        -:   76:/********************* Initialization function **********************/
        -:   77:
        1:   78:int _drill__turret_init(void)
        -:   79:{
        1:   80:	(self.Float+1)->CB_current_value = 100.0; /*axleLength*/
        1:   81:	(self.Int+0)->CB_current_value = 70; /*forwardDecelerationPosition*/
        1:   82:	(self.Int+1)->CB_current_value = 30; /*backwardDecelerationPosition*/
        1:   83:	(self.Int+2)->CB_current_value = 10; /*range*/
        1:   84:	self.Bool+=9;
        1:   85:	self.Int+=3;
        1:   86:	self.Float+=2;
        -:   87:
        -:   88:
        1:   89:	return 0;
        -:   90:}
        -:   91:
        -:   92:
        -:   93:/************************ Behavior function *************************/
        -:   94:
    #####:   95:int drill__turret(void)
        -:   96:{
        -:   97:	static char *__comp_name = "drill.turret";
    #####:   98:	if (exec_term_node(self_num)) {
        -:   99:
        -:  100:		/*********************** Internals variables ************************/
        -:  101:
    #####:  102:		turret_speedIncrement = self.Float+0;
    #####:  103:		turret_lockingFault = self.Bool+0;
    #####:  104:		turret_forwardEndFault = self.Bool+1;
    #####:  105:		turret_forwardEndValue = self.Bool+2;
    #####:  106:		turret_forwardDecelerationFault = self.Bool+3;
    #####:  107:		turret_forwardDecelerationValue = self.Bool+4;
    #####:  108:		turret_backwardDecelerationFault = self.Bool+5;
    #####:  109:		turret_backwardDecelerationValue = self.Bool+6;
    #####:  110:		turret_backwardEndFault = self.Bool+7;
    #####:  111:		turret_backwardEndValue = self.Bool+8;
    #####:  112:		turret_axleLength = self.Float+1;
    #####:  113:		turret_forwardDecelerationPosition = self.Int+0;
    #####:  114:		turret_backwardDecelerationPosition = self.Int+1;
    #####:  115:		turret_range = self.Int+2;
        -:  116:
        -:  117:		/********************* Pre-conditions execution *********************/
        -:  118:
        -:  119:		/*no Pre-conditions*/
        -:  120:
        -:  121:		/************************ Behavior execution ************************/
        -:  122:
        -:  123:		{
        -:  124:
        -:  125:
        -:  126:			/* Evolution of the axe in function of the input orders		*/
    #####:  127:			if ( !lockingFault)
        -:  128:			{
    #####:  129:				speedIncrement = speed * CLOCK_PERIOD / 1000000.0;
    #####:  130:				axlePosition += speedIncrement;
    #####:  131:				if (axlePosition > axleLength)
    #####:  132:					axlePosition = axleLength;
        -:  133:
    #####:  134:				if (axlePosition < 0.0)
    #####:  135:					axlePosition = 0.0;
        -:  136:			}
        -:  137:
        -:  138:
        -:  139:			/*Calculation of the sensor states						 */
    #####:  140:			forwardEnd = (( !forwardEndFault && (axlePosition == axleLength)) || (forwardEndFault &forwardEndValue));
    #####:  141:			forwardDeceleration = (( !forwardDecelerationFault &&(axlePosition >= forwardDecelerationPosition)&&(axlePosition <= (forwardDecelerationPosition + range))) || (forwardDecelerationFault && forwardDecelerationValue));
    #####:  142:			backwardDeceleration = (( !backwardDecelerationFault && (axlePosition >= backwardDecelerationPosition) & (axlePosition <= (backwardDecelerationPosition + range))) || (backwardDecelerationFault && backwardDecelerationValue));
    #####:  143:			backwardEnd = (( !backwardEndFault && (axlePosition == 0)) || (backwardEndFault &backwardEndValue));
        -:  144:		}
        -:  145:
    #####:  146:		CB_post_float(turret_axlePosition);
    #####:  147:		CB_post_bool(turret_forwardEnd);
    #####:  148:		CB_post_bool(turret_forwardDeceleration);
    #####:  149:		CB_post_bool(turret_backwardDeceleration);
    #####:  150:		CB_post_bool(turret_backwardEnd);
        -:  151:
        -:  152:		/******************** Post-conditions execution *********************/
        -:  153:
        -:  154:		/*no Post-conditions*/
        -:  155:	}
        -:  156:
        -:  157:	/*************************** self update ****************************/
        -:  158:
    #####:  159:	self.Bool += 9;
    #####:  160:	self.Int += 3;
    #####:  161:	self.Float += 2;
        -:  162:
    #####:  163:	return 0;
        -:  164:}
        -:  165:

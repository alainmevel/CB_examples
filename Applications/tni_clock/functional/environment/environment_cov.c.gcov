        -:    0:Source:environment_cov.c
        -:    0:Graph:MinGW/environment_cov.gcno
        -:    0:Data:MinGW/environment_cov.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*2023-10-03T11:13:48-01:00*/
        -:    2:
        -:    3:/********************************************************************
        -:    4: * environment_cov.c
        -:    5: * 
        -:    6: * generated by: plcgen 3.1.391
        -:    7: ********************************************************************/
        -:    8:
        -:    9:#include "cb_comp.h"
        -:   10:#include "cb_covs.h"
        -:   11:#include "iec_1131.h"
        -:   12:
        -:   13:#include "environment.h"
        -:   14:
        -:   15:
        -:   16:
        -:   17:/**************************** Variables *****************************/
        -:   18:
        -:   19:CB_Index environment__num = 0;
        -:   20:CB_Mem_Int *environment_depth;
        -:   21:CB_Mem_Bool *environment_B1;
        -:   22:CB_Mem_Bool *environment_B2;
        -:   23:CB_Mem_Bool *environment_B3;
        -:   24:CB_Mem_Bool *environment_B4;
        -:   25:CB_Mem_Int *environment_pressure;
        -:   26:CB_Mem_Bool *environment_tick;
        -:   27:CB_Mem_Float *environment_hydrostaticPressure;
        -:   28:CB_Mem_Float *environment_absolutePressure;
        -:   29:
        -:   30:/**************************** Variables *****************************/
        -:   31:
        -:   32:#define depth (*((short *)&(environment_depth->CB_current_value) + ALIGN_OFFSET_SHORT))
        -:   33:#define B1 (environment_B1->CB_current_value)
        -:   34:#define B2 (environment_B2->CB_current_value)
        -:   35:#define B3 (environment_B3->CB_current_value)
        -:   36:#define B4 (environment_B4->CB_current_value)
        -:   37:#define pressure (*((short *)&(environment_pressure->CB_current_value) + ALIGN_OFFSET_SHORT))
        -:   38:#define tick (environment_tick->CB_current_value)
        -:   39:#define hydrostaticPressure (environment_hydrostaticPressure->CB_current_value)
        -:   40:#define absolutePressure (environment_absolutePressure->CB_current_value)
        -:   41:
        -:   42:
        -:   43:/************************ Components offsets ************************/
        -:   44:
        -:   45:
        -:   46:/********************* Initialization function **********************/
        -:   47:
        1:   48:int _tni_clock__environment_init(void)
        -:   49:{
        1:   50:	self.Float+=2;
        -:   51:
        -:   52:
        1:   53:	return 0;
        -:   54:}
        -:   55:
        -:   56:
        -:   57:/************************ Behavior function *************************/
        -:   58:
        1:   59:int tni_clock__environment(void)
        -:   60:{
        -:   61:	static char *__comp_name = "tni_clock.environment";
        1:   62:	if (exec_term_node(self_num)) {
        -:   63:
        -:   64:		/*********************** Internals variables ************************/
        -:   65:
        1:   66:		environment_hydrostaticPressure = self.Float+0;
        1:   67:		environment_absolutePressure = self.Float+1;
        -:   68:
        -:   69:		/********************* Pre-conditions execution *********************/
        -:   70:
        -:   71:		/*no Pre-conditions*/
        -:   72:
        -:   73:		/************************ Behavior execution ************************/
        -:   74:
        -:   75:		{
        -:   76:			/*********************** Pressure calculation *********************************/
        -:   77:			/* Absolute pressure :                                                          */
        -:   78:			/*   10 m = 2bar (1bar atm pressure and 1 bar due to water pressure)     */
        -:   79:			/*   + 1bar every 10m                                                       */
        -:   80:			/*                                                                             */
        -:   81:			/* hydrostatic pressure : 1 bar every 10 m                                */
        -:   82:			/*                                                                             */
        -:   83:			/* 1 bar = 0.987 atm                                                           */
        -:   84:			/*******************************************************************************/
        1:   85:			hydrostaticPressure = (abs(depth) / 10.0) * 1024.0;
        1:   86:			absolutePressure = hydrostaticPressure + 1024.0;
        -:   87:
        1:   88:			pressure = absolutePressure;
        -:   89:
        -:   90:
        -:   91:
        -:   92:			/************** Quartz management *************/
        1:   93:			tick = ! tick;
        -:   94:		}
        -:   95:
        1:   96:		CB_post_int(environment_pressure);
        1:   97:		CB_post_bool(environment_tick);
        -:   98:
        -:   99:		/******************** Post-conditions execution *********************/
        -:  100:
        -:  101:		/*no Post-conditions*/
        -:  102:	}
        -:  103:
        -:  104:	/*************************** self update ****************************/
        -:  105:
        1:  106:	self.Float += 2;
        -:  107:
        1:  108:	return 0;
        -:  109:}
        -:  110:

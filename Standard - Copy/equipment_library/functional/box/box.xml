<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Generator: ControlBuild -->

<project xmlns="http://www.plcopen.org/xml/tc6_0201.xsd" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.plcopen.org/xml/tc6_0201.xsd TC6_XML_V10.xsd">
	<fileHeader companyName="Dassault Syst&#232;mes" productName="ControlBuild" productVersion="2024x" creationDateTime="2023-10-03T11:13:33-01:00" />
	<contentHeader name="box">
		<coordinateInfo>
			<fbd>
				<scaling x="100" y="100" />
			</fbd>
			<ld>
				<scaling x="100" y="100" />
			</ld>
			<sfc>
				<scaling x="32" y="8" />
			</sfc>
		</coordinateInfo>
	</contentHeader>
	<types>
		<dataTypes />
		<pous>
			<pou name="equipment_library.box" pouType="functionBlock">
				<interface>
					<localVars>
						<variable name="status_act_prod">
							<type>
								<DINT />
							</type>
							<initialValue>
								<simpleValue value="0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>5fb97b02-4986-46b8-a9cb-61a4ae9ad579</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m11">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="1.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>93232210-fb6b-401d-8839-9658a86b36ba</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m12">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>a6b4a5f4-97bf-43d3-8268-ae7c5ac5cf0c</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m13">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>9284b16c-636e-4c57-af0a-71de374f2f37</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m14">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>cccad8c0-4622-4be4-a4cf-8f18c24c24cd</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m21">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>cc1a9209-23d2-4a73-b798-97443ffa0c78</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m22">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="1.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>ccd18d08-f422-48c2-9455-53f6488be340</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m23">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>3f724a76-1bf3-4f65-84e5-48a3ca3fb772</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m24">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>73b277bb-c2ae-48fe-aa0d-a219a472994e</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m31">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>f5bbbfed-e176-4f55-a405-04f4eae9a91e</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m32">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>fc58542a-7609-44e3-bca3-7e75cb1be0a2</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m33">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="1.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>c651f74d-05e6-4f31-9271-7766e6e38172</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m34">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>5376fc5d-2e91-4c5a-920d-1e5e9118709a</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m41">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>43fab056-f124-4545-936d-4959f8470206</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m42">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>315c4607-a8e3-4300-83af-ebcb5f678fea</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m43">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>ee344479-ca42-4033-b97f-06f08eeb05cc</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="m44">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="1.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>1a4a1df9-a5f5-4756-9b96-05c1dcbc1921</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="movementConv">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>06928599-38c1-47f3-8cad-7ee6e1673f5a</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="contact">
							<type>
								<BOOL />
							</type>
							<initialValue>
								<simpleValue value="false" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>36c774ea-25d9-46f1-839d-537e5f3bea2f</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="centreRotX">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>1c1f8bbe-09dd-4fa3-975c-0511689846de</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="centreRotZ">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>d4b87d31-cb40-4d3b-a264-a1f26741d7c4</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="centreRotY">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>3aa52306-b7c1-4307-a4a0-e94a3c1cb74a</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="moveDirection">
							<type>
								<INT />
							</type>
							<initialValue>
								<simpleValue value="0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>b1f8ff0c-5523-4f92-8698-cc8d78bef671</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="idConv">
							<type>
								<DINT />
							</type>
							<initialValue>
								<simpleValue value="0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>d76f2b46-3362-4c3c-b1de-1aea5cb693ab</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="moveAuthorization">
							<type>
								<BOOL />
							</type>
							<initialValue>
								<simpleValue value="false" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>e982e6c5-f5a2-40d0-9f8e-7cd9fad2087c</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="number">
							<type>
								<INT />
							</type>
							<initialValue>
								<simpleValue value="0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>884d93f1-0ce0-4e47-9a3a-61675a2f013e</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="idProdBelow">
							<type>
								<DINT />
							</type>
							<initialValue>
								<simpleValue value="0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>24fbea9e-1c99-4f2d-9485-506e8bb80cc9</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldOtherPx">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>5323d74b-8853-4137-8088-6b95f2830e5c</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldOtherPy">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>fe882177-7c17-40cf-b569-8814bbe28020</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldOtherPz">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>69f38d1d-6719-47e4-a9a4-8db754684405</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldOtherRx">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>df0d5bde-6f5c-4777-af28-385286a6a57a</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldOtherRy">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>13bfa9ff-a4d7-4fc0-8aef-4e5c1ce6722f</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldOtherRz">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>54452e76-0f06-4eb9-b7ab-61226d90b0af</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="gravitySpeed">
							<type>
								<REAL />
							</type>
							<initialValue>
								<simpleValue value="0.0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>429ba17d-6e96-49cf-803a-89f0116d9f5e</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<variable name="oldIdConv">
							<type>
								<DINT />
							</type>
							<initialValue>
								<simpleValue value="0" />
							</initialValue>
							<addData>
								<data name="Geensys.CB.IdentifierProperty" handleUnknown="preserve">
									<value>4cb15f33-00d8-4b6f-841f-a640136f8bcd</value>
								</data>
								<data name="Geensys.CB.visibility" handleUnknown="preserve">
									<value>true</value>
								</data>
							</addData>
						</variable>
						<addData>
							<data name="Geensys.CB.kind" handleUnknown="preserve">
								<value>localVars</value>
							</data>
						</addData>
					</localVars>
					<addData>
					</addData>
				</interface>
				<actions>
					<action name="Prelude">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Initialisation of local variables of the instance of the product&#9;*/
/* ----------------------------------------------------------------&#9;*/

movementConv = 0.0;
contact = 0;
moveAuthorization = 1;
idConv=-1;</ST>
						</body>
					</action>
					<action name="Postlude">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* If there is no contact, the box falls down thanks to gravity&#9;*/&#9;
/* ----------------------------------------------------------------&#9;*/
if (contact == 0) 
&#9;moveZBy(myself, gravitySpeed*-1.0);


/* ----------------------------------------------------------------&#9;*/
/* Shift on conveyors if authorization&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
if (moveAuthorization == 1 &amp;&amp; (idConv&gt;=0)) 
&#9;moveRelativeAnotherBy(myself, idConv, movementConv, 0.0, 0.0);


/* ----------------------------------------------------------------&#9;*/
/* Reset memories&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
if (contact == 0) {
&#9;moveDirection = 0;
&#9;idProdBelow = -1;
}

</ST>
						</body>
					</action>
					<action name="equipment_library.product_creator">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Information to the creation module that a product is in its area&#9;*/
/* ----------------------------------------------------------------&#9;*/
 
otherVar(productPresence) = 1;
</ST>
						</body>
					</action>
					<action name="equipment_library.conveyor">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Interaction between the product and conveyors&#9;&#9;&#9;*/
/* Convention : a conveyor is always oriented so that its X-axis is&#9;*/
/*&#9;  &#9;  in the same direction as the flow&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/

/* ----------------------------------------------------------------&#9;*/
/* We retrieve the conveyor's data if the center of the product is&#9;*/
/* included in the volume of the conveyor.&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
if ((idConv == -1) || isMyCenterIncludedInXYOfOther(myself, other)) {
&#9;/* Traverse speed on the conveyor&#9;*/
&#9;movementConv = otherVar(incShiftProduct) ;

&#9;/* Keep trace of traverse direction of the conveyor&#9;&#9;*/
&#9;if (movementConv  &gt; 0.0) moveDirection = DIR_FLOW;
&#9;if (movementConv  &lt; 0.0) moveDirection = DIR_INVERSE_FLOW;

&#9;/* Get the identifier of the conveyor in order to be&#9;&#9;*/
&#9;/* able to shift the product in its coordinate system&#9;&#9;*/
&#9;idConv = other;
&#9;oldIdConv = idConv;

&#9;/* If the conveyor is a traverser, a lift, ...  &#9;&#9;*/
&#9;/* the product msut follow it&#9; &#9;&#9;&#9;&#9;*/
&#9;if (otherVar(incrementPositionX) != 0.0) moveXBy(myself, otherVar(incrementPositionX));
&#9;if (otherVar(incrementPositionY) != 0.0) moveYBy(myself, otherVar(incrementPositionY));
&#9;if (otherVar(incrementPositionZ) != 0.0) alignTwoObjectsRelativeThirdZ(myself, other, other);

&#9;/* Management of the rotation of the product on a &#9;&#9;*/
&#9;/* swivelling table, rotary plate ring, ...&#9;&#9;&#9;*/
&#9;/* Keep trace of the rotation center in order to be &#9;&#9;*/
&#9;/* able to give them to products that could be stacked&#9;&#9;*/
&#9;/* above this instance&#9;&#9;&#9;&#9;&#9;&#9;*/
&#9;centreRotX = otherVar(centerRotX);
&#9;centreRotY = otherVar(centerRotY);
&#9;centreRotZ = otherVar(centerRotZ);

&#9;if ((otherVar(incRotX) != 0.0) || (otherVar(incRotY)!= 0) || (otherVar(incRotZ)!= 0.0))
&#9;&#9;rotateBy(myself, otherVar(incRotX), otherVar(incRotY), otherVar(incRotZ), centreRotX, centreRotY, centreRotZ);  

}

/* ----------------------------------------------------------------&#9;*/
/* The product lays on a solid&#9;&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
contact = 1;
</ST>
						</body>
					</action>
					<action name="equipment_library.stop">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Stop on a mechanical stop&#9;  &#9;&#9;&#9;&#9;&#9;*/
/* Management of the interaction with a mechanical stop with or &#9;*/
/* without blocking of the product on the mechanical stop according&#9;*/
/* to the shift direction.&#9;&#9;&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/


/* The movement of the product can be forbidden according to the &#9;*/
/* position of the mechanical stop, the position of the product &#9;*/
/* and the shift direction. &#9;&#9;&#9;&#9;&#9;&#9;*/
if ( oldIdConv &gt;= 0 &amp;&amp; ((moveDirection == DIR_FLOW &amp;&amp; (getCenterXInAnother(myself, oldIdConv ) &lt; getCenterXInAnother(other, oldIdConv ))) 
&#9;|| (moveDirection == DIR_INVERSE_FLOW &amp;&amp; (getCenterXInAnother(myself, oldIdConv ) &gt; getCenterXInAnother(other, oldIdConv )))) ) {

&#9;moveAuthorization=0;
 }

</ST>
						</body>
					</action>
					<action name="equipment_library.presence_sensor">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Information to the sensor that a product is in its detection area&#9;*/
/* ----------------------------------------------------------------&#9;*/

otherVar(detection) = 1;
</ST>
						</body>
					</action>
					<action name="equipment_library.product_killer">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Destruction of the current instance of the product if the killer&#9;*/
/* is active.&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/

if (otherVar(isActive)) prodKill(myself);</ST>
						</body>
					</action>
					<action name="equipment_library.suction_head">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Information to the actor that a product is present&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
otherVar(productPresence) = 1;

/* ----------------------------------------------------------------&#9;*/
/* Keep contact with the actor only if the head is sucking&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
if (otherVar(suckProduct)) {
&#9;moveRelativeAnotherBy(myself, other, otherVar(incrementPositionX), otherVar(incrementPositionY), otherVar(incrementPositionZ));
&#9;contact = 1;
}


</ST>
						</body>
					</action>
					<action name="equipment_library.box">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* Interaction between two products&#9; &#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/


/* Verify that the product whose position has to be updated is &#9;*/
/* located on one side of the current instance and not above or &#9;*/
/* below it.&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;*/
if ((getCenterZ(myself) &gt; getCenterZ(other) - (getSizeZ(other)/2.0)) &amp;&amp; (getCenterZ(myself) &lt; getCenterZ(other)+(getSizeZ(other)/2.0))) {
&#9;/* Update the position of the product that is behind the &#9;*/
&#9;/* other according to the shift direction&#9;&#9;&#9;&#9;*/
&#9;if ( (moveDirection == DIR_FLOW &amp;&amp; (getCenterXInAnother(myself, idConv) &lt; getCenterXInAnother(other, idConv))) 
&#9;&#9;|| (moveDirection == DIR_INVERSE_FLOW &amp;&amp; (getCenterXInAnother(myself, idConv) &gt; getCenterXInAnother(other, idConv))) ) {

&#9;&#9;/* Align the 2 products one behind the other if its speed is lower &#9;&#9;*/
&#9;&#9;if (fabs(movementConv ) &gt; fabs(otherVar(movementConv )))
&#9;&#9;&#9;alignTwoObjectsRelativeThirdX(myself, other, idConv);

&#9;&#9;/* Forbid the shift&#9;&#9;&#9;&#9;&#9;&#9;*/
&#9;&#9;moveAuthorization=0;
&#9; }
}

/* Interaction with the product below&#9;&#9;&#9;&#9;&#9;*/
if ((getCenterZ(myself)  &gt; getCenterZ(other)+ (getSizeZ(other) / 2)) 
&#9;&amp;&amp;  ((getCenterX(myself) &gt; getCenterX(other) - (getSizeX(other)/4.0)) &amp;&amp; (getCenterX(myself) &lt; getCenterX(other)+(getSizeX(other)/4.0)))
&#9;&amp;&amp;  ((getCenterY(myself) &gt; getCenterY(other) - (getSizeY(other)/4.0)) &amp;&amp; (getCenterY(myself) &lt; getCenterY(other)+(getSizeY(other)/4.0))))  {
&#9;/* Same movement than the product below&#9;&#9;&#9;&#9;*/
&#9;if (idProdBelow == other) {
&#9;&#9;moveBy(myself, getPositionX(other)-oldOtherPx, getPositionY(other)-oldOtherPy, getPositionZ(other)-oldOtherPz);
&#9;&#9;rotateBy(myself, getAngleX(other)-oldOtherRx, getAngleY(other)-oldOtherRy, getAngleZ(other)-oldOtherRz,
&#9;&#9;&#9;&#9;otherVar(centreRotX), otherVar(centreRotY), otherVar(centreRotZ));
&#9;}
&#9;oldOtherPx=getPositionX(other); oldOtherPy=getPositionY(other); oldOtherPz=getPositionZ(other);
&#9;oldOtherRx=getAngleX(other); oldOtherRy=getAngleY(other); oldOtherRz=getAngleZ(other);
&#9;centreRotX=otherVar(centreRotX); centreRotY=otherVar(centreRotY); centreRotZ=otherVar(centreRotZ);

&#9;idProdBelow = other;

&#9;/* The product lays on a solid&#9;&#9;&#9;&#9;&#9;*/
&#9;contact = 1;

&#9;/* The next line of code can be added in order to align &#9;*/
&#9;/* correctly  the products one on the others ...&#9;&#9;*/
&#9;/* We should align both products in Z-axis according to the &#9;*/
&#9;/* absolute coordinate system and not according to the &#9;*/
&#9;/* relative system coordinate in order to have a generic &#9;*/
&#9;/* behaviour.&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;*/
&#9;/* =&gt; adapt this according to the application when needed&#9;*/

&#9;/* alignTwoObjectsRelativeThirdZ(myself, other, other); &#9;*/
&#9;
}







</ST>
						</body>
					</action>
					<action name="equipment_library.tipper">
						<body>
							<ST>/* ----------------------------------------------------------------&#9;*/
/* The product turns over &#9;&#9;&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
if (otherVar(incrementRotation != 0.0)) {
&#9;rotateYBy(myself, otherVar(incrementRotation),otherVar(initPosX),
&#9;&#9; otherVar(initPosY), otherVar(initPosZ));
&#9;moveAuthorization = 0;
} 
else {
/* automatic repositionning of the product on fixed positions  */
&#9;CB_Float fixedPositions[5]={0.0, 90.0, 180.0, 270.0, 360.0};
&#9;CB_Float deltaRecalage = 10.0;
&#9;CB_Int i;
&#9;CB_Float currentAngle;
&#9;currentAngle=getAngleY(myself);  
&#9;for (i=0; i&lt;5; i++) {
&#9;&#9;if ((currentAngle- deltaRecalage &lt; fixedPositions[i]) &amp;&amp; (currentAngle+ deltaRecalage &gt; fixedPositions[i])) {
&#9;&#9;&#9;if (currentAngle!= fixedPositions[i]) {
&#9;&#9;&#9;&#9;rotateYTo(myself, fixedPositions[i],otherVar(initPosX),otherVar(initPosY), otherVar(initPosZ));
&#9;&#9;&#9;}
&#9;&#9;&#9;break;
&#9;&#9; }
&#9;}
}



/* ----------------------------------------------------------------&#9;*/
/* The product lays on a solid&#9;&#9;&#9;&#9;&#9;&#9;*/
/* ----------------------------------------------------------------&#9;*/
contact = 1;</ST>
						</body>
					</action>
					<action name="C_header">
						<body>
							<ST>

#define DIR_FLOW&#9;&#9;1
#define DIR_INVERSE_FLOW&#9;-1

</ST>
						</body>
					</action>
				</actions>
				<addData>
					<data name="Geensys.CB.Actor" handleUnknown="preserve">
						<value>true</value>
					</data>
					<data name="Geensys.CB.Product" handleUnknown="preserve">
						<value>true</value>
					</data>
					<data name="Geensys.CB.COMPONENT_CLASS" handleUnknown="preserve">
						<value>SIMULATION</value>
					</data>
					<data name="Geensys.CB.COMPONENT_CLASS_UUID" handleUnknown="preserve">
						<value>259d51dd-3d3f-4b47-8521-c0425150bfee</value>
					</data>
					<data name="Geensys.CB.INSTANCE_NAMIMG_PATTERN" handleUnknown="preserve">
						<value>&lt;CLASS_PATTERN&gt;</value>
					</data>
					<data name="Geensys.CB.COMMENTS_PATTERN" handleUnknown="preserve">
						<value>&lt;CLASS_PATTERN&gt;</value>
					</data>
				</addData>
				<documentation>
					<xhtml:pre>This module simulates a generic product &quot;box&quot;.</xhtml:pre>
				</documentation>
			</pou>
		</pous>
	</types>
	<instances>
		<configurations />
	</instances>
</project>